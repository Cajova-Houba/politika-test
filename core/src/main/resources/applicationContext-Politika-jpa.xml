<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
       default-lazy-init="true">

	<import resource="classpath:applicationContext-Politika-resources.xml"/>

    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

	<!-- BEANS WHICH NEED TO HAVE A CUSTOM NAME:
			entity manager factory
			persistence unit manager
			transaction manager
			data source - located in applicationContext-microappName-resources.xml
			
			use replace for these strings:
			entityManagerFactoryGeneric
			persistenceUnitManagerGeneric
			transactionManagerGeneric
	 -->

    <!-- EntityManagerFactory -->
    <bean id="entityManagerFactoryPolitika" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitManager" ref="persistenceUnitManagerPolitika"/>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.query.substitutions">true 'Y', false 'N'</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
            </props>
            <!-- Turn batching off for better error messages under PostgreSQL -->
            <!-- hibernate.jdbc.batch_size=0 -->
        </property>
    </bean>

	<!-- Persistence unit manager -->
    <bean id="persistenceUnitManagerPolitika" class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
        <property name="persistenceXmlLocations">
            <list>
                <value>classpath:META-INF/persistence-Politika.xml</value>
            </list>
        </property>
        <property name="defaultDataSource" ref="dataSourcePolitika"/>
    </bean>

    <!-- Needed so the @PersistenceUnit annotation is recognized -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>


	<!-- for @Transactional annotations -->
	<tx:annotation-driven transaction-manager="transactionManagerPolitika"/>
    <!-- Transaction manager for a single EntityManagerFactory (alternative to JTA) -->
    <bean id="transactionManagerPolitika" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactoryPolitika" />
    </bean>

    <!-- Activates scanning of @Autowired -->
    <context:annotation-config/>

    <!-- Activates scanning of @Repository -->
    <context:component-scan base-package="org.microapp.Politika.dao"/>
    
    <bean id="kategorieDao" class="org.politika.Politika.dao.jpa.KategorieDaoJpa">
    </bean>
    
	<bean id="prispevekDao" class="org.politika.Politika.dao.jpa.PrispevekDaoJpa">
	</bean>    
	
	<bean id="osobaDao" class="org.politika.Politika.generic.dao.jpa.GenericDaoJpa">
		<constructor-arg value="org.politika.Politika.model.Osoba" />
	</bean>

    <!-- Activates scanning of @Service -->
    <context:component-scan base-package="org.microapp.Politika.service"/>
    
	<bean id="kategorieManager" class="org.politika.Politika.service.impl.KategorieManagerImpl">
	</bean>
	
	<bean id="prispevekManager" class="org.politika.Politika.service.impl.PrispevekManagerImpl">
	</bean>
	
	<bean id="osobaManager" class="org.politika.Politika.generic.service.impl.GenericManagerImpl">
		<constructor-arg ref="osobaDao" />
	</bean>
</beans>